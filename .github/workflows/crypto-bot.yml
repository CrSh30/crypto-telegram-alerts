name: Crypto RSI/MACD Bot

on:
  schedule:
    - cron: "2 * * * *"     # run oraria standard
    - cron: "2 6 * * *"     # extra spinta per daily: 06:02 UTC (≈ 08:02 Rome in CEST)
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1️⃣ Ripristina la cache dello stato (cooldown/daily report)
      - name: Restore state cache
        uses: actions/cache/restore@v4
        with:
          path: .state
          key: bot-state-
          restore-keys: |
            bot-state-

      # 🔍 Controllo iniziale: verifica se la cache è stata ripristinata
      - name: Verify restored state (before bot run)
        run: |
          echo "🧩 Verifica cache ripristinata..."
          if [ -f .state/last_signals.json ]; then
            echo "✅ File di stato trovato (cache ripristinata correttamente)"
            echo "📦 Dimensione: $(wc -c < .state/last_signals.json) bytes"
            echo "🕒 Ultima modifica:"
            stat -c "%y" .state/last_signals.json || echo "stat non disponibile"
            echo "📖 Contenuto parziale:"
            head -n 10 .state/last_signals.json
          else
            echo "⚠️ Nessun file di stato trovato (probabile prima esecuzione o cache vuota)"
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install "numpy==2.1.3"
          pip install "pandas==2.3.2"
          pip install "pandas-ta==0.4.71b0"
          pip install "requests==2.32.3"

      - name: Run bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python bot.py

      # 🔍 Controllo intermedio: mostra file di stato generato/aggiornato
      - name: Show state file (debug)
        run: |
          if [ -f .state/last_signals.json ]; then
            echo "STATE SIZE:"
            wc -c .state/last_signals.json
            echo "STATE CONTENT (prime righe):"
            head -n 15 .state/last_signals.json
          else
            echo "⚠️ Nessun file di stato trovato dopo l'esecuzione del bot!"
          fi

      # 2️⃣ Salva la cache aggiornata (chiave dinamica per evitare conflitti)
      - name: Save state cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .state
          key: bot-state-${{ github.run_id }}

      # 3️⃣ Verifica che la cache sia stata effettivamente salvata
      - name: Verify saved state (after cache save)
        if: always()
        run: |
          echo "🧩 Verifica cache salvata..."
          if [ -f .state/last_signals.json ]; then
            echo "✅ File di stato trovato e salvato!"
            echo "📦 Dimensione: $(wc -c < .state/last_signals.json) bytes"
            echo "🕒 Ultima modifica:"
            stat -c "%y" .state/last_signals.json || echo "stat non disponibile"
            echo "📖 Contenuto parziale:"
            head -n 15 .state/last_signals.json || echo "(file vuoto o binario)"
          else
            echo "⚠️ Nessun file .state/last_signals.json trovato al momento del salvataggio!"
          fi
